package otmp

use core.alloc.arena {Arena}

TemplateRegistry :: struct {
    templates: Map(str, &Template);

    arena: Arena;
}

Template :: struct {
    name: str;
    filepath: str;

    instructions: [..] &TNode;

    node_storage: Arena;
}

TNode :: union {
    Text: str;
    Extend: str;
    Block: struct {
        block_name: str;
        contents: [..] &TNode;
    };
    Foreach: struct {
        var_name: str;
        list: &TNode;
        body: [..] &TNode;
    };
    Condition: struct {
        cond: &TNode;
        true_block: [..] &TNode;
        false_block: [..] &TNode;
    };
    Let: struct {
        var_name: str;
        value: &TNode;
    };
    ExprBlock: struct {
        block_name: str;
    };
    ExprPartial: struct {
        partial_name: str;
        arguments: [..] &TNode;
    };
    ExprVar: struct {
        var_name: str;
    };
    ExprSelector: struct {
        var: &TNode;
        field: str;
    };
    ExprSubscript: struct {
        var: &TNode;
        sub: &TNode;
    };
    ExprInt: struct {
        val: i32;
    };
    ExprString: struct {
        val: str;
    };
    ExprBool: struct {
        val: bool;
    };
    ExprBinOp: struct {
        left: &TNode;
        right: &TNode;
        op: BinaryOp;
    };
}


Error :: enum {
    None;
    Template_Not_Found;
    Duplicate_Template;

    Template_Parse_Error;

    Render_Error;
}


TemplateScope :: #type Map(str, any);


BinaryOp :: enum {
    Add;
    Sub;
    Mul;
    Div;
    Mod;

    Eq;
    Ne;
    Lt;
    Le;
    Gt;
    Ge;

    And;
    Or;
}

